load("//src/v/rpc:compiler.bzl", "rpc_gen")

cc_library(
    name = "fundamental",
    hdrs = [
        "fundamental.h",
    ],
    include_prefix = "raft",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/utils",
    ],
)

rpc_gen(
    "raftgen",
    src = "raftgen.json",
    out = "raftgen_service.h",
)

#genrule(
#    name = "raftgen",
#    tools = ["//src/v/rpc:rpc_compiler"],
#    srcs = ["raftgen.json"],
#    outs = ["raftgen_service.h"],
#    cmd = "$(location //src/v/rpc:rpc_compiler) --service_file $(SRCS) --output_file $@",
#)

cc_library(
    name = "raft",
    srcs = [
        "append_entries_buffer.cc",
        "configuration_bootstrap_state.cc",
        "configuration_manager.cc",
        "consensus.cc",
        "consensus_utils.cc",
        "coordinated_recovery_throttle.cc",
        "event_manager.cc",
        "follower_queue.cc",
        "follower_stats.cc",
        "group_configuration.cc",
        "group_manager.cc",
        "heartbeat_manager.cc",
        "heartbeats.cc",
        "logger.cc",
        "offset_monitor.cc",
        "persisted_stm.cc",
        "probe.cc",
        "recovery_memory_quota.cc",
        "recovery_scheduler.cc",
        "recovery_stm.cc",
        "replicate_batcher.cc",
        "replicate_entries_stm.cc",
        "replication_monitor.cc",
        "rpc_client_protocol.cc",
        "state_machine.cc",
        "state_machine_base.cc",
        "state_machine_manager.cc",
        "types.cc",
        "vote_stm.cc",
    ],
    hdrs = [
        "append_entries_buffer.h",
        "configuration_bootstrap_state.h",
        "configuration_manager.h",
        "consensus.h",
        "consensus_client_protocol.h",
        "consensus_utils.h",
        "coordinated_recovery_throttle.h",
        "errc.h",
        "event_manager.h",
        "follower_queue.h",
        "follower_stats.h",
        "fundamental.h",
        "fwd.h",
        "group_configuration.h",
        "group_manager.h",
        "heartbeat_manager.h",
        "heartbeats.h",
        "logger.h",
        "mutex_buffer.h",
        "mux_state_machine.h",
        "offset_monitor.h",
        "persisted_stm.h",
        "probe.h",
        "raftgen_service.h",
        "recovery_memory_quota.h",
        "recovery_scheduler.h",
        "recovery_stm.h",
        "replicate.h",
        "replicate_batcher.h",
        "replicate_entries_stm.h",
        "replication_monitor.h",
        "rpc_client_protocol.h",
        "service.h",
        "state_machine.h",
        "state_machine_base.h",
        "state_machine_manager.h",
        "timeout_jitter.h",
        "transfer_leadership.h",
        "types.h",
        "vote_stm.h",
    ],
    include_prefix = "raft",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/cluster:notification",
        "//src/v/cluster:snapshots",
        "//src/v/features",
        "//src/v/rpc",
        "//src/v/storage",
    ],
)
