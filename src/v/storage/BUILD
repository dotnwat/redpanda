cc_library(
    name = "config",
    hdrs = [
        "config.h",
    ],
    include_prefix = "storage",
    visibility = ["//visibility:public"],
)

cc_library(
    name = "record_batch_builder",
    srcs = [
        "parser_utils.cc",
        "record_batch_builder.cc",
    ],
    hdrs = [
        "parser_utils.h",
        "record_batch_builder.h",
    ],
    include_prefix = "storage",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/base",
        "//src/v/bytes",
        "//src/v/compression",
        "//src/v/model",
    ],
)

cc_library(
    name = "storage",
    srcs = [
        "api.cc",
        "backlog_controller.cc",
        "batch_cache.cc",
        "compacted_index_chunk_reader.cc",
        "compaction_controller.cc",
        "compaction_reducers.cc",
        "disk_log_appender.cc",
        "disk_log_impl.cc",
        "file_sanitizer_types.cc",
        "fs_utils.cc",
        "index_state.cc",
        "key_offset_map.cc",
        "kvstore.cc",
        "lock_manager.cc",
        "log_manager.cc",
        "log_reader.cc",
        "log_replayer.cc",
        "logger.cc",
        "node.cc",
        "offset_to_filepos.cc",
        "offset_translator.cc",
        "offset_translator_state.cc",
        "parser.cc",
        "probe.cc",
        "readers_cache.cc",
        "record_batch_builder.cc",
        "record_batch_utils.cc",
        "segment.cc",
        "segment_appender.cc",
        "segment_deduplication_utils.cc",
        "segment_index.cc",
        "segment_reader.cc",
        "segment_set.cc",
        "segment_utils.cc",
        "snapshot.cc",
        "spill_key_index.cc",
        "storage_resources.cc",
        "types.cc",
    ],
    hdrs = [
        "api.h",
        "backlog_controller.h",
        "batch_cache.h",
        "chunk_cache.h",
        "compacted_index.h",
        "compacted_index_chunk_reader.h",
        "compacted_index_reader.h",
        "compacted_index_writer.h",
        "compacted_offset_list.h",
        "compaction_controller.h",
        "compaction_reducers.h",
        "config.h",
        "directories.h",
        "disk_log_appender.h",
        "disk_log_impl.h",
        "exceptions.h",
        "failure_probes.h",
        "file_sanitizer.h",
        "file_sanitizer_types.h",
        "fs_utils.h",
        "fwd.h",
        "index_state.h",
        "index_state_serde_compat.h",
        "key_offset_map.h",
        "kvstore.h",
        "lock_manager.h",
        "log.h",
        "log_appender.h",
        "log_housekeeping_meta.h",
        "log_manager.h",
        "log_reader.h",
        "log_replayer.h",
        "logger.h",
        "node.h",
        "ntp_config.h",
        "offset_assignment.h",
        "offset_to_filepos.h",
        "offset_translator.h",
        "offset_translator_state.h",
        "parser.h",
        "parser_errc.h",
        "probe.h",
        "readers_cache.h",
        "readers_cache_probe.h",
        "record_batch_builder.h",
        "record_batch_utils.h",
        "scoped_file_tracker.h",
        "segment.h",
        "segment_appender.h",
        "segment_appender_chunk.h",
        "segment_deduplication_utils.h",
        "segment_index.h",
        "segment_reader.h",
        "segment_set.h",
        "segment_utils.h",
        "snapshot.h",
        "spill_key_index.h",
        "storage_resources.h",
        "translating_reader.h",
        "types.h",
        "version.h",
    ],
    include_prefix = "storage",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/bytes",
        "//src/v/compression",
        "//src/v/config",
        "//src/v/features",
        "//src/v/finjector",
        "//src/v/metrics",
        "//src/v/model",
        "//src/v/raft:fundamental",
        "//src/v/reflection",
        "//src/v/resource_mgmt",
        "@roaring//:libroaring",
        "@unordered_dense//:libunordered_dense",
    ],
)
