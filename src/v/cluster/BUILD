load("//src/v/rpc:compiler.bzl", "rpc_gen")

rpc_gen("bootstrap_rpc", src="cluster_bootstrap.json", out="cluster_bootstrap_service.h")
rpc_gen("controller_rpc", src="controller.json", out="controller_service.h")
rpc_gen("metadata_rpc", src="metadata_dissemination_rpc.json", out="metadata_dissemination_rpc_service.h")
rpc_gen("id_allocator_rpc", src="id_allocator.json", out="id_allocator_service.h")
rpc_gen("tx_gateway_rpc", src="tx_gateway.json", out="tx_gateway_service.h")
rpc_gen("partition_balancer_rpc", src="partition_balancer_rpc.json", out="partition_balancer_rpc_service.h")
rpc_gen("node_status_rpc", src="node_status_rpc.json", out="node_status_rpc_service.h")
rpc_gen("ephemeral_credential_rpc", src="ephemeral_credential_rpc.json", out="ephemeral_credential_rpc_service.h")
rpc_gen("self_test_rpc", src="self_test_rpc.json", out="self_test_rpc_service.h")
rpc_gen("topic_recovery_status_rpc", src="topic_recovery_status_rpc.json", out="topic_recovery_status_rpc_service.h")
rpc_gen("offsets_recovery_rpc", src="offsets_recovery_rpc.json", out="offsets_recovery_rpc_service.h")
rpc_gen("tx_manager_migrator_rpc", src="migrations/tx_manager_migrator.json", out="tx_manager_migrator_service.h")

cc_library(
    name = "version",
    hdrs = [
        "version.h",
    ],
    include_prefix = "cluster",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/utils",
        "//src/v/model",
    ],
)

cc_library(
    name = "snapshots",
    hdrs = [
        "snapshots.h",
    ],
    include_prefix = "cluster",
    visibility = ["//visibility:public"],
    deps = [
    ],
)

cc_library(
    name = "notification",
    hdrs = [
        "notification.h",
    ],
    include_prefix = "cluster",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/utils",
    ],
)

cc_library(
    name = "features",
    hdrs = [
        "features.h",
    ],
    include_prefix = "cluster",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/utils",
        "//src/v/model",
    ],
)

cc_library(
    name = "archival_run_quota",
    hdrs = [
        "archival/run_quota.h",
    ],
    include_prefix = "cluster",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/utils",
    ],
)

cc_library(
    name = "cluster",
    srcs = [
        "metadata_cache.cc",
        "partition_manager.cc",
        "scheduling/partition_allocator.cc",
        "logger.cc",
        "config_frontend.cc",
        "config_manager.cc",
        "cluster_utils.cc",
        "id_allocator.cc",
        "id_allocator_frontend.cc",
        "rm_partition_frontend.cc",
        "tx_gateway_frontend.cc",
        "tx_gateway.cc",
        "service.cc",
        "metadata_dissemination_handler.cc",
        "metadata_dissemination_service.cc",
        "types.cc",
        "notification_latch.cc",
        "topic_table.cc",
        "topic_table_probe.cc",
        "topic_updates_dispatcher.cc",
        "members_table.cc",
        "members_manager.cc",
        "partition_leaders_table.cc",
        "topics_frontend.cc",
        "controller_backend.cc",
        "controller_probe.cc",
        "controller_log_limiter.cc",
        "controller_stm.cc",
        "controller_snapshot.cc",
        "controller.cc",
        "partition.cc",
        "partition_probe.cc",
        "id_allocator_stm.cc",
        "tm_stm_cache.cc",
        "tm_stm.cc",
        "rm_stm.cc",
        "rm_stm_types.cc",
        "log_eviction_stm.cc",
        "tx_helpers.cc",
        "security_manager.cc",
        "security_frontend.cc",
        "cluster_discovery.cc",
        "cluster_recovery_manager.cc",
        "cluster_recovery_table.cc",
        "cluster_recovery_reconciler.cc",
        "controller_api.cc",
        "members_frontend.cc",
        "members_backend.cc",
        "health_manager.cc",
        "scheduling/allocation_node.cc",
        "scheduling/types.cc",
        "scheduling/allocation_state.cc",
        "scheduling/allocation_strategy.cc",
        "scheduling/constraints.cc",
        "scheduling/leader_balancer.cc",
        "scheduling/leader_balancer_probe.cc",
        "scheduling/leader_balancer_constraints.cc",
        "health_monitor_types.cc",
        "health_monitor_backend.cc",
        "health_monitor_frontend.cc",
        "metrics_reporter.cc",
        "node/types.cc",
        "node/local_monitor.cc",
        "feature_backend.cc",
        "feature_manager.cc",
        "feature_barrier.cc",
        "drain_manager.cc",
        "remote_topic_configuration_source.cc",
        "partition_balancer_planner.cc",
        "partition_balancer_backend.cc",
        "partition_balancer_state.cc",
        "partition_balancer_rpc_handler.cc",
        "producer_state.cc",
        "producer_state_manager.cc",
        "node_status_backend.cc",
        "node_status_rpc_handler.cc",
        "self_test_backend.cc",
        "self_test_frontend.cc",
        "self_test_rpc_handler.cc",
        "self_test_rpc_types.cc",
        "self_test/cloudcheck.cc",
        "self_test/diskcheck.cc",
        "self_test/netcheck.cc",
        "bootstrap_service.cc",
        "bootstrap_backend.cc",
        "ephemeral_credential_frontend.cc",
        "ephemeral_credential_service.cc",
        "topic_recovery_status_rpc_handler.cc",
        "topic_recovery_status_frontend.cc",
        "node_isolation_watcher.cc",
        "topic_recovery_status_types.cc",
        "topic_table_partition_generator.cc",
        "cloud_storage_size_reducer.cc",
        "topic_recovery_service.cc",
        "partition_recovery_manager.cc",
        "plugin_table.cc",
        "plugin_frontend.cc",
        "plugin_backend.cc",
        "archival/archival_metadata_stm.cc",
        "archival/archival_policy.cc",
        "archival/ntp_archiver_service.cc",
        "archival/probe.cc",
        "archival/types.cc",
        "archival/upload_controller.cc",
        "archival/segment_reupload.cc",
        "archival/retention_calculator.cc",
        "archival/upload_housekeeping_service.cc",
        "archival/adjacent_segment_merger.cc",
        "archival/purger.cc",
        "archival/scrubber.cc",
        "archival/archiver_manager.cc",
        "archival/async_data_uploader.cc",
        "cloud_metadata/cluster_manifest.cc",
        "cloud_metadata/cluster_recovery_backend.cc",
        "cloud_metadata/key_utils.cc",
        "cloud_metadata/manifest_downloads.cc",
        "cloud_metadata/producer_id_recovery_manager.cc",
        "cloud_metadata/uploader.cc",
        "migrations/tx_manager_migrator.cc",
        "tx_topic_manager.cc",
        "shard_placement_table.cc",
        "shard_balancer.cc",
        "topic_recovery_validator.cc",
        #"../cloud_storage/topic_manifest.cc",
    ],
    hdrs = [
        "archival/adjacent_segment_merger.h",
        "archival/archival_metadata_stm.h",
        "archival/archival_policy.h",
        "archival/archiver_manager.h",
        "archival/async_data_uploader.h",
        "archival/fwd.h",
        "archival/logger.h",
        "archival/ntp_archiver_service.h",
        "archival/probe.h",
        "archival/purger.h",
        "archival/retention_calculator.h",
        "archival/run_quota.h",
        "archival/scrubber.h",
        "archival/scrubber_scheduler.h",
        "archival/segment_reupload.h",
        "archival/types.h",
        "archival/upload_controller.h",
        "archival/upload_housekeeping_service.h",
        "scheduling/allocation_node.h",
        "scheduling/allocation_state.h",
        "scheduling/allocation_strategy.h",
        "scheduling/constraints.h",
        "scheduling/leader_balancer.h",
        "scheduling/leader_balancer_constraints.h",
        "scheduling/leader_balancer_greedy.h",
        "scheduling/leader_balancer_probe.h",
        "scheduling/leader_balancer_random.h",
        "scheduling/leader_balancer_strategy.h",
        "scheduling/leader_balancer_types.h",
        "scheduling/partition_allocator.h",
        "scheduling/types.h",
        "bootstrap_backend.h",
        "bootstrap_service.h",
        "bootstrap_types.h",
        "cloud_storage_size_reducer.h",
        "cluster_discovery.h",
        "cluster_recovery_manager.h",
        "cluster_recovery_reconciler.h",
        "cluster_recovery_state.h",
        "cluster_recovery_table.h",
        "cluster_utils.h",
        "cluster_uuid.h",
        "commands.h",
        "config_frontend.h",
        "config_manager.h",
        "controller.h",
        "controller_api.h",
        "controller_backend.h",
        "controller_log_limiter.h",
        "controller_probe.h",
        "controller_snapshot.h",
        "controller_stm.h",
        "distributed_kv_stm.h",
        "distributed_kv_stm_types.h",
        "drain_manager.h",
        "ephemeral_credential_frontend.h",
        "ephemeral_credential_serde.h",
        "ephemeral_credential_service.h",
        "errc.h",
        "feature_backend.h",
        "feature_barrier.h",
        "feature_manager.h",
        "fwd.h",
        "health_manager.h",
        "health_monitor_backend.h",
        "health_monitor_frontend.h",
        "health_monitor_types.h",
        "id_allocator.h",
        "id_allocator_frontend.h",
        "id_allocator_stm.h",
        "leader_router.h",
        "log_eviction_stm.h",
        "logger.h",
        "members_backend.h",
        "members_frontend.h",
        "members_manager.h",
        "members_table.h",
        "metadata_cache.h",
        "metadata_dissemination_handler.h",
        "metadata_dissemination_service.h",
        "metadata_dissemination_types.h",
        "metrics_reporter.h",
        "namespaced_cache.h",
        "node_isolation_watcher.h",
        "node_status_backend.h",
        "node_status_rpc_handler.h",
        "node_status_rpc_types.h",
        "node_status_table.h",
        "notification_latch.h",
        "ntp_callbacks.h",
        "partition.h",
        "partition_balancer_backend.h",
        "partition_balancer_planner.h",
        "partition_balancer_rpc_handler.h",
        "partition_balancer_state.h",
        "partition_balancer_types.h",
        "partition_leaders_table.h",
        "partition_manager.h",
        "partition_probe.h",
        "partition_recovery_manager.h",
        "plugin_backend.h",
        "plugin_frontend.h",
        "plugin_table.h",
        "prefix_truncate_record.h",
        "producer_state.h",
        "producer_state_manager.h",
        "raft0_utils.h",
        "remote_topic_configuration_source.h",
        "rm_group_proxy.h",
        "rm_partition_frontend.h",
        "rm_stm.h",
        "rm_stm_types.h",
        "security_frontend.h",
        "security_manager.h",
        "self_test_backend.h",
        "self_test_frontend.h",
        "self_test_rpc_handler.h",
        "self_test_rpc_types.h",
        "service.h",
        "shard_balancer.h",
        "shard_placement_table.h",
        "shard_table.h",
        "simple_batch_builder.h",
        "state_machine_registry.h",
        "tm_stm.h",
        "tm_stm_cache.h",
        "tm_stm_cache_manager.h",
        "topic_recovery_service.h",
        "topic_recovery_status_frontend.h",
        "topic_recovery_status_rpc_handler.h",
        "topic_recovery_status_types.h",
        "topic_recovery_validator.h",
        "topic_table.h",
        "topic_table_partition_generator.h",
        "topic_table_probe.h",
        "topic_updates_dispatcher.h",
        "topic_validators.h",
        "topics_frontend.h",
        "tx_coordinator_mapper.h",
        "tx_gateway.h",
        "tx_gateway_frontend.h",
        "tx_hash_ranges.h",
        "tx_helpers.h",
        "tx_topic_manager.h",
        "tx_utils.h",
        "types.h",
        "cloud_metadata/cluster_manifest.h",
        "cloud_metadata/cluster_recovery_backend.h",
        "cloud_metadata/error_outcome.h",
        "cloud_metadata/key_utils.h",
        "cloud_metadata/manifest_downloads.h",
        "cloud_metadata/offsets_lookup.h",
        "cloud_metadata/offsets_lookup_batcher.h",
        "cloud_metadata/offsets_lookup_rpc_types.h",
        "cloud_metadata/offsets_recoverer.h",
        "cloud_metadata/offsets_recovery_manager.h",
        "cloud_metadata/offsets_recovery_router.h",
        "cloud_metadata/offsets_recovery_rpc_types.h",
        "cloud_metadata/offsets_recovery_service.h",
        "cloud_metadata/offsets_snapshot.h",
        "cloud_metadata/offsets_upload_router.h",
        "cloud_metadata/offsets_upload_rpc_types.h",
        "cloud_metadata/offsets_uploader.h",
        "cloud_metadata/producer_id_recovery_manager.h",
        "cloud_metadata/types.h",
        "cloud_metadata/uploader.h",
        "node/local_monitor.h",
        "node/types.h",
        "migrations/tx_manager_migrator.h",
        "migrations/tx_manager_migrator_handler.h",
        "migrations/tx_manager_migrator_types.h",
        "cluster_bootstrap_service.h",
        "controller_service.h",
        "metadata_dissemination_rpc_service.h",
        "id_allocator_service.h",
        "tx_gateway_service.h",
        "partition_balancer_rpc_service.h",
        "node_status_rpc_service.h",
        "ephemeral_credential_rpc_service.h",
        "self_test_rpc_service.h",
        "topic_recovery_status_rpc_service.h",
        "offsets_recovery_rpc_service.h",
        "tx_manager_migrator_service.h",
    ],
    include_prefix = "cluster",
    visibility = ["//visibility:public"],
    deps = [
        "//src/v/base",
        "@seastar//:libseastar",
        "//src/v/model",
        "//src/v/cloud_storage",
    ],
)
